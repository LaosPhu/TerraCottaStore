@model ShippingModel
@{
    ViewData["title"] = "Create shipping";
}
<style type="text/css">
    .css_select_div {
        text-align: center;
    }

    .css_select {
        display: inline-table;
        width: 25%;
        padding: 5px;
        margin: 5px 2%;
        border: solid 1px #686868;
        border-radius: 5px;
    }
</style>
<h4>New address info</h4>
<div class="col-md-9">


   
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label> Tỉnh thành </label>
            <select class="css_select" id="tinh" name="tinh" title="Chọn Tỉnh Thành">
                <option value="0">Tỉnh Thành</option>
            </select>

        </div>

        <div class="form-group">
            <label>Quận huyện</label>

            <select class="css_select" id="quan" name="quan" title="Chọn Quận Huyện">
                <option value="0">Quận Huyện</option>
            </select>

        </div>
        <div class="form-group">
            <label>Xã Phườngs</label>
            <select class="css_select" id="phuong" name="phuong" title="Chọn Phường Xã">
                <option value="0">Phường Xã</option>
            </select>
        </div>
    <div class="form-group">
        <label>Gía vận chuyển</label>
        <input asp-for="Price" id="price-shipping"></input>
    </div>
        <div class="form-group">
        <button type="button" class="btn btn-primary btn-add-shipping"> Create </button>

        </div>
    

        <table class="table table-striped" id="myTable">
            <thead>
                <tr>
                    <th>id</th>
                    <th>City</th>
                    <th>District</th>
                    <th>Ward</th>
                    <th>Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var shiping in ViewBag.ShippingList)
            {
                <tr>
                    <td>@shiping.Id</td>
                    <td>@shiping.city.Replace("Tỉnh ", "") 
                                                                                  </td>
                    <td>@shiping.Distric.Replace("Huyện ", "").Replace("Quận ", "")</td>
                    <td>@shiping.ward.Replace("Xã ", "").Replace("Phường ", "")</td>
                    <td>@shiping.Price.ToString("#,##0 VND")</td>
                    <td><button class="btn btn-danger btn-delete" data-id="@shiping.Id" >Delete</button></td>
                </tr>
            }
            </tbody>
        </table>
    <a asp-action="Index"> Back to List address !</a>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
    <script>
        CKEDITOR.replace('Description')
    </script>
    <script>
        $(document).on('click', '.btn-delete', function () {
            var id = $(this).data('id'); // Lấy id từ thuộc tính data-id

            // Hiển thị cảnh báo trước khi xóa
            Swal.fire({
                title: 'Bạn có chắc chắn muốn xóa?',
                text: "Hành động này không thể hoàn tác!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Gửi AJAX đến controller xóa dữ liệu
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Delete", "Shipping")", // Đường dẫn action Delete trong controller Shipping
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('Đã xóa!', 'Dữ liệu đã được xóa thành công.', 'success')
                                    .then(() => {
                                        location.reload(); // Tải lại trang
                                    });
                            } else {
                                Swal.fire('Lỗi!', 'Không thể xóa dữ liệu.', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Lỗi!', 'Có lỗi xảy ra khi gửi yêu cầu.', 'error');
                        }
                    });
                }
            });
        });
        $(".btn-add-shipping").click(function(){
            var tinh =  $("#tinh").find('option:selected').text();
            var quan =  $("#quan").find('option:selected').text();
            var phuong =  $("#phuong").find('option:selected').text();

            var price = $("#price-shipping").val();
            if (price == 0) {
                Swal.fire("Không bỏ trống giá tiền");
            }
            else {
                if (tinh == '' || quan == '' || phuong == '') {
                    Swal.fire("Không bỏ trống");
                }
                else {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("CreatShipping", "Shipping")",
                        data: { tinh: tinh, quan: quan, phuong: phuong, price: price },

                        success: function (result) {
                            if (result.success) {
                                Swal.fire("Thêm vận chuyển thành công.");

                            }
                            else if (result.duplicate) {
                                Swal.fire("Dữ liệu trùng lập");
                            }
                        }
                    });
                }
            }
           
        })

        $(document).ready(function () {
            //Lấy tỉnh thành
            $.getJSON('https://esgoo.net/api-tinhthanh/1/0.htm', function (data_tinh) {
                if (data_tinh.error == 0) {
                    $.each(data_tinh.data, function (key_tinh, val_tinh) {
                        $("#tinh").append('<option value="' + val_tinh.id + '">' + val_tinh.full_name + '</option>');
                    });
                    $("#tinh").change(function (e) {
                        var idtinh = $(this).val();
                        //Lấy quận huyện
                        $.getJSON('https://esgoo.net/api-tinhthanh/2/' + idtinh + '.htm', function (data_quan) {
                            if (data_quan.error == 0) {
                                $("#quan").html('<option value="0">Quận Huyện</option>');
                                $("#phuong").html('<option value="0">Phường Xã</option>');
                                $.each(data_quan.data, function (key_quan, val_quan) {
                                    $("#quan").append('<option value="' + val_quan.id + '">' + val_quan.full_name + '</option>');
                                });
                                //Lấy phường xã
                                $("#quan").change(function (e) {
                                    var idquan = $(this).val();
                                    $.getJSON('https://esgoo.net/api-tinhthanh/3/' + idquan + '.htm', function (data_phuong) {
                                        if (data_phuong.error == 0) {
                                            $("#phuong").html('<option value="0">Phường Xã</option>');
                                            $.each(data_phuong.data, function (key_phuong, val_phuong) {
                                                $("#phuong").append('<option value="' + val_phuong.id + '">' + val_phuong.full_name + '</option>');
                                            });
                                        }
                                    });
                                });

                            }
                        });
                    });

                }
            });
        });
    </script>
}
